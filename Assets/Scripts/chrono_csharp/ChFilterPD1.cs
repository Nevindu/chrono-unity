//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChFilterPD1 : ChAnalogueFilter {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal ChFilterPD1(global::System.IntPtr cPtr, bool cMemoryOwn) : base(ChronoEngine_csharpPINVOKE.ChFilterPD1_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChFilterPD1 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          ChronoEngine_csharpPINVOKE.delete_ChFilterPD1(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ChFilterPD1() : this(ChronoEngine_csharpPINVOKE.new_ChFilterPD1__SWIG_0(), true) {
    if (ChronoEngine_csharpPINVOKE.SWIGPendingException.Pending) throw ChronoEngine_csharpPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChFilterPD1(double step, double Td1, double Kdt1) : this(ChronoEngine_csharpPINVOKE.new_ChFilterPD1__SWIG_1(step, Td1, Kdt1), true) {
    if (ChronoEngine_csharpPINVOKE.SWIGPendingException.Pending) throw ChronoEngine_csharpPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChFilterPD1(double step, double Td1) : this(ChronoEngine_csharpPINVOKE.new_ChFilterPD1__SWIG_2(step, Td1), true) {
    if (ChronoEngine_csharpPINVOKE.SWIGPendingException.Pending) throw ChronoEngine_csharpPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChFilterPD1(double step) : this(ChronoEngine_csharpPINVOKE.new_ChFilterPD1__SWIG_3(step), true) {
    if (ChronoEngine_csharpPINVOKE.SWIGPendingException.Pending) throw ChronoEngine_csharpPINVOKE.SWIGPendingException.Retrieve();
  }

  public override void Reset() {
    ChronoEngine_csharpPINVOKE.ChFilterPD1_Reset(swigCPtr);
    if (ChronoEngine_csharpPINVOKE.SWIGPendingException.Pending) throw ChronoEngine_csharpPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Config(double step, double Td1, double Kdt1) {
    ChronoEngine_csharpPINVOKE.ChFilterPD1_Config__SWIG_0(swigCPtr, step, Td1, Kdt1);
    if (ChronoEngine_csharpPINVOKE.SWIGPendingException.Pending) throw ChronoEngine_csharpPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Config(double step, double Td1) {
    ChronoEngine_csharpPINVOKE.ChFilterPD1_Config__SWIG_1(swigCPtr, step, Td1);
    if (ChronoEngine_csharpPINVOKE.SWIGPendingException.Pending) throw ChronoEngine_csharpPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Config(double step) {
    ChronoEngine_csharpPINVOKE.ChFilterPD1_Config__SWIG_2(swigCPtr, step);
    if (ChronoEngine_csharpPINVOKE.SWIGPendingException.Pending) throw ChronoEngine_csharpPINVOKE.SWIGPendingException.Retrieve();
  }

  public override double Filter(double u) {
    double ret = ChronoEngine_csharpPINVOKE.ChFilterPD1_Filter(swigCPtr, u);
    if (ChronoEngine_csharpPINVOKE.SWIGPendingException.Pending) throw ChronoEngine_csharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
