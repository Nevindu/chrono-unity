//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class M113_Vehicle : ChTrackedVehicle {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal M113_Vehicle(global::System.IntPtr cPtr, bool cMemoryOwn) : base(vehiclePINVOKE.M113_Vehicle_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(M113_Vehicle obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          vehiclePINVOKE.delete_M113_Vehicle(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public M113_Vehicle(bool fixed_, TrackShoeType shoe_type, DrivelineTypeTV driveline_type, BrakeType brake_type, bool add_track_RSDA, ChContactMethod contact_method, CollisionType chassis_collision_type) : this(vehiclePINVOKE.new_M113_Vehicle__SWIG_0(fixed_, (int)shoe_type, (int)driveline_type, (int)brake_type, add_track_RSDA, (int)contact_method, (int)chassis_collision_type), true) {
    if (vehiclePINVOKE.SWIGPendingException.Pending) throw vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public M113_Vehicle(bool fixed_, TrackShoeType shoe_type, DrivelineTypeTV driveline_type, BrakeType brake_type, bool add_track_RSDA, ChContactMethod contact_method) : this(vehiclePINVOKE.new_M113_Vehicle__SWIG_1(fixed_, (int)shoe_type, (int)driveline_type, (int)brake_type, add_track_RSDA, (int)contact_method), true) {
    if (vehiclePINVOKE.SWIGPendingException.Pending) throw vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public M113_Vehicle(bool fixed_, TrackShoeType shoe_type, DrivelineTypeTV driveline_type, BrakeType brake_type, bool add_track_RSDA) : this(vehiclePINVOKE.new_M113_Vehicle__SWIG_2(fixed_, (int)shoe_type, (int)driveline_type, (int)brake_type, add_track_RSDA), true) {
    if (vehiclePINVOKE.SWIGPendingException.Pending) throw vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public M113_Vehicle(bool fixed_, TrackShoeType shoe_type, DrivelineTypeTV driveline_type, BrakeType brake_type, bool add_track_RSDA, ChSystem system, CollisionType chassis_collision_type) : this(vehiclePINVOKE.new_M113_Vehicle__SWIG_3(fixed_, (int)shoe_type, (int)driveline_type, (int)brake_type, add_track_RSDA, ChSystem.getCPtr(system), (int)chassis_collision_type), true) {
    if (vehiclePINVOKE.SWIGPendingException.Pending) throw vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public M113_Vehicle(bool fixed_, TrackShoeType shoe_type, DrivelineTypeTV driveline_type, BrakeType brake_type, bool add_track_RSDA, ChSystem system) : this(vehiclePINVOKE.new_M113_Vehicle__SWIG_4(fixed_, (int)shoe_type, (int)driveline_type, (int)brake_type, add_track_RSDA, ChSystem.getCPtr(system)), true) {
    if (vehiclePINVOKE.SWIGPendingException.Pending) throw vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public void CreateTrack(bool val) {
    vehiclePINVOKE.M113_Vehicle_CreateTrack(swigCPtr, val);
    if (vehiclePINVOKE.SWIGPendingException.Pending) throw vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public override void Initialize(ChCoordsysD chassisPos, double chassisFwdVel) {
    vehiclePINVOKE.M113_Vehicle_Initialize__SWIG_0(swigCPtr, ChCoordsysD.getCPtr(chassisPos), chassisFwdVel);
    if (vehiclePINVOKE.SWIGPendingException.Pending) throw vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

  public override void Initialize(ChCoordsysD chassisPos) {
    vehiclePINVOKE.M113_Vehicle_Initialize__SWIG_1(swigCPtr, ChCoordsysD.getCPtr(chassisPos));
    if (vehiclePINVOKE.SWIGPendingException.Pending) throw vehiclePINVOKE.SWIGPendingException.Retrieve();
  }

}
